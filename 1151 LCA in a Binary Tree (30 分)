#include <iostream>
#include <map>
using namespace std;
const int maxn = 10005;
int m,n,num,pre[maxn],n1,n2;
map<int,int> numTosort,sortTonum;
int main(){
	cin>>m>>n;
	for(int i=1;i<=n;i++) {
		cin>>num;
		numTosort[num] = i;
		sortTonum[i] = num;
	}
	for(int i=1;i<=n;i++) {
		cin>>num;
		pre[i] = numTosort[num];
	}
	for(int i=1;i<=m;i++){
		cin>>n1>>n2;
		if(numTosort.find(n1) == numTosort.end() && numTosort.find(n2) == numTosort.end()){
			printf("ERROR: %d and %d are not found.\n",n1,n2); 
		}
		else if(numTosort.find(n1) == numTosort.end()){
			printf("ERROR: %d is not found.\n",n1); 
		}
		else if(numTosort.find(n2) == numTosort.end()){
			printf("ERROR: %d is not found.\n",n2);
		}
		else {
			int id1 = numTosort[n1],index,id2 = numTosort[n2];
			for(int j=1;j<=n;j++){
				index = pre[j];
				if(index >=id1 && index<=id2 || index<=id1 && index>=id2) break;
			}
			if(index==id1||index==id2) printf("%d is an ancestor of %d.\n",sortTonum[index],sortTonum[index==id1?id2:id1]);
			else printf("LCA of %d and %d is %d.\n",sortTonum[id1],sortTonum[id2],sortTonum[index]);
 		}	 
	}
	return 0;
}
