#include <iostream>
using namespace std;
const int maxn = 505;
const int INF = 10000000;
int n,m,c1,c2;
int G[maxn][maxn];
int weight[maxn] = {0};
int w[maxn] = {0};
int num[maxn] ={0};
int d[maxn];
bool vis[maxn] = {false};
void Dijkstra(int c1){
	fill(d,d+maxn,INF);  //初始化各点到c1的距离最大 
	num[c1] = 1;
	w[c1] = weight[c1];
	d[c1] = 0;
	for(int i = 0;i<n;i++){
		int u = -1,MIN = INF;
		for(int j=0;j<n;j++){
			if(vis[j] == false && d[j]<MIN){
				u=j;
				MIN = d[j];
			}
		}
		if(u==-1) return;
		vis[u] = true;
		for(int v=0;v<n;v++){
			if(vis[v] ==false&&G[u][v]!=INF){
				if(d[u] + G[u][v] < d[v]){
					d[v] = d[u] + G[u][v];
					w[v] = w[u] + weight[v];
					num[v] = num[u];
				}
				else if(d[u] + G[u][v] == d[v]){
					if(w[u] + weight[v] > w[v]){
						w[v] = w[u] + weight[v];
					}
					num[v] += num[u];
				}
			}
		}
	} 
	
}
int main() {
	cin>>n>>m>>c1>>c2;
	fill(G[0],G[0]+maxn*maxn,maxn);
	for(int i=0;i<n;i++){
		cin >> weight[i];
	}
	for(int i =0;i<m;i++){
		int c3,c4,l;
		cin>>c3>>c4>>l;
		G[c3][c4]  = G[c4][c3]= l;
	}
	Dijkstra(c1);
	cout <<num[c2]<<" "<<w[c2]<<endl;
	return 0;
}
