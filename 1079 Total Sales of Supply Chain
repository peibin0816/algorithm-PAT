#include <iostream>
#include <queue>
#include <vector>
#include <cmath>
using namespace std;
const int maxn = 100010;
double n,p,t;
struct tree{
	double data;
	vector<int> child;
}node[maxn];
double ans = 0;
void DFS(int root,int deep){
	if(node[root].child.size() == 0){
		ans += node[root].data * pow(1+t,deep);
	}
	for(int i=0;i<node[root].child.size();i++){
		DFS(node[root].child[i],deep+1);
	}
}
int main() {
	cin>>n>>p>>t;
	t /= 100;
	int k,child;
	for(int i=0;i<n;i++){
		cin>>k;
		if(k==0) {
			cin >> node[i].data;	
		}else{
			for(int j=0;j<k;j++){
				cin >> child;
				node[i].child.push_back(child);
			}
		}
	}
	DFS(0,0);
	printf("%.1f\n",ans*p);
	return 0;
}
