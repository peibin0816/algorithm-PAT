#include <iostream>
#include <queue>
#include <vector>
#include <cmath>
using namespace std;
const int maxn = 100010;
double n,p,t;
int maxDeep = -1;
struct tree{
	vector<int> child;
}node[maxn];
int num = 0;
void DFS(int root,int deep){
	if(node[root].child.size()==0){
		if(deep > maxDeep){
			maxDeep = deep; 
			num = 1;
		}else if(deep == maxDeep) num++;
	}	
	for(int i=0;i<node[root].child.size();i++){
		DFS(node[root].child[i],deep+1);
	}
}
int main() {
	int root = 0,k;
	cin>>n>>p>>t;
	t /= 100;
	for(int i=0;i<n;i++){
		cin>>k;
		if(k==-1) root = i;
		else{
			node[k].child.push_back(i);
		}
	}
	DFS(root,0);
	printf("%.2f %d\n",p*pow(1+t,maxDeep),num);
	return 0;
}
